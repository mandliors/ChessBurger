<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>D:\Programming\C++\raylib\ChessBurger\ChessBurger\Board\</FILEPATH>
      <FILENAME>IBoard.cpp</FILENAME>
      <LINE>1332</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>IBoard::_RegisterMove</FUNCTION>
    <DECORATED>?_RegisterMove@IBoard@@IEAAXPEAVPiece@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>1319</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\Programming\C++\raylib\ChessBurger\ChessBurger\Board\</FILEPATH>
      <FILENAME>IBoard.cpp</FILENAME>
      <LINE>1334</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>IBoard::_RegisterMove</FUNCTION>
    <DECORATED>?_RegisterMove@IBoard@@IEAAXPEAVPiece@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>1319</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>